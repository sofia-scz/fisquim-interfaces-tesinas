##############
#compiler
FCC = mpiifort
FFLAGS =  -O3 -qmkl=sequential

##############
## directories defs
## current directory
BASE = $(CURDIR)

## target file
TARGET = gsrd.x

## aenet source
AENET_ROOT = /opt/software/apps/software/aenet/2.0.4

#
EXEC = $(BASE)/$(TARGET)
OBJD = $(BASE)/obj
SRCD = $(BASE)/src
LIBS_AENET = $(AENET_ROOT)/lib
INCS = $(AENET_ROOT)/include
MYLIBS=$(BASE)/extlib

VPATH = $(OBJD):$(SRCD):$(SRCD)/inicondlib:$(MYLIBS):$(MYLIBS)/linalg

LIB = -L$(LIBS_AENET) $(LIBS_AENET)/libaenet.a

##############
# Main and functions
#SRC_MAIN = $(SRCD)/gsrd_readinico.f90
SRC_MAIN = $(SRCD)/gsrd.f90
#SRC_MAIN = $(SRCD)/gsrd_mu.f90
SRC = $(SRC_MAIN)
#modules
#SRCMOD = $(addprefix $(SRCD)/, commonvars.f90 timing.f90 io.f90 aeio.f90 trainset.f90 symmfunc.f90 chebyshev.f90 sfbasis.f90 sfsetup.f90 potential.f90 sortlib.f90 lclist.f90 xsflib.f90 constants.f90 geometry.f90 feedforward.f90 aenet.f90 )
SRCMOD = $(addprefix $(SRCD)/, commonvars.f90 )
#SRCMOD += $(addprefix $(SRC_NN)/, aenet.f90 )
#SRCMOD += $(addprefix $(ROUT)/, string_functions.f90 )
#routines
SRC += $(addprefix $(SRCD)/, readwrite.f90 pes_aenet.f90 potfuncgrad.f90 energy_vdw.f90 energy_longrangeZ_0.f90 energy_longrangeZ_1.f90  eqintegration.f90 make_slabmotion.f90 sysinterface.f90 optimization.f90 init_pesNN.f90 m33inv.f90)
#initial cond sampling
SRC += $(addprefix $(SRCD)/inicondlib/, nmodean.f90 nmodesamp.f90 epotvalue.f90 printres.f90 molinicond.f90  angmomfix.f90 iniorient_euler.f90 )
################# to compile version with pure normal mode
#SRC += $(addprefix $(SRCD)/inicondlib/, nmodean_mu.f90 nmodesamp.f90 epotvalue.f90 printres.f90 molinicond_mu.f90  angmomfix.f90 iniorient_euler_mu.f90 FCC111_convert.f90)
########
#common routines
SRC += $(addprefix $(MYLIBS)/, checkfile.f90 rand_normal.f90 )
# linear algebra routines
SRC += $(addprefix $(MYLIBS)/linealalg/,coordchange.f90 crossprod.f90  printmatrix.f90  solveigen.f90 invmatgen.f90 distance.f90 )
#
SRCF77 = $(addprefix $(MYLIBS)/, ran0.f gasdev.f ran1.f)

##############
##objects to build
f90OBJS=$(notdir $(SRC:.f90=.o))

f77OBJS=$(notdir $(SRCF77:.f=.o))

MODOBJS=$(notdir $(SRCMOD:.f90=.mod))

## prebuilt modules
#AENET_MODS=$(addprefix $(SRC_AENET)/, aeio.mod aenet.mod chebyshev.mod constants.mod feedforward.mod geometry.mod io.mod lclist.mod parallel.mod potential.mod sfbasis.mod sfsetup.mod sortlib.mod symmfunc.mod timing.mod trainset.mod xsflib.mod )

####################################################################3

all:	$(MODOBJS)	$(f90OBJS)	$(f77OBJS)  
	@echo building executable
	cd $(OBJD); $(FCC) $(MODOBJS) $(f90OBJS) $(f77OBJS) $(FFLAGS) -o $(EXEC) $(OBJS) $(LIB)

$(MODOBJS):	%.mod : %.f90
	@echo building modules
	cd $(OBJD); $(FCC) $(LIB) -c $(FFLAGS) $< -o $@

$(f90OBJS):	%.o : %.f90
	@echo building $*.o
	##cd $(OBJD); $(FCC) $(LIB) -c $(FFLAGS) $< -o $@
	cd $(OBJD); $(FCC) -I$(INCS) -c $(FFLAGS) $< -o $@

$(f77OBJS):	%.o : %.f
	@echo building $*.o
	cd $(OBJD); $(FCC) -c $(FFLAGS) $< -o $@

test:
	@echo "test"
	@echo $(SRC)
	@echo "test"
	@echo $(MODOBJS)
	@echo $(AENET_MODS)
	@echo "test"
	@echo "hola $< -o $@"

sync:
	rsync -avz --delete --progress -u $(BASE)/Makefile  piluso:~/GSRD_codes/GSRD/Makefile
	rsync -avz --delete --progress -u --exclude=".*"  $(BASE)/src/  piluso:~/GSRD_codes/GSRD/src/
	rsync -avz --delete --progress -u --exclude=".*"  $(BASE)/doc/  piluso:~/GSRD_codes/GSRD/doc/

clean:
	rm -f $(OBJD)/*.o $(OBJD)/*.mod gsrd.x

